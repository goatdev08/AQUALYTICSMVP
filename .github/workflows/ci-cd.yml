# =======================================================================
# AquaLytics MVP - CI/CD Pipeline
# =======================================================================
# 
# Workflow completo que maneja:
# - Continuous Integration (CI): Tests, lint, build verification
# - Continuous Deployment (CD): Auto-deploy a Vercel y Render
# 
# Triggers:
# - Push a main: Full CI/CD pipeline
# - Pull Requests: Solo CI (sin deploy)
# - Workflow manual: Con opción de deploy
#

name: 🚀 AquaLytics CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Deploy to production'
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: '20.x'
  PYTHON_VERSION: '3.11'
  PNPM_VERSION: '8.x'

jobs:
  # ======================
  # DETECTAR CAMBIOS
  # ======================
  detect-changes:
    name: 🔍 Detectar Cambios
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.changes.outputs.frontend }}
      backend: ${{ steps.changes.outputs.backend }}
      docs: ${{ steps.changes.outputs.docs }}
    steps:
      - name: Checkout código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detectar cambios en directorios
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            frontend:
              - 'apps/web/**'
              - 'package.json'
              - 'pnpm-*.yaml'
            backend:
              - 'services/api/**'
              - 'database/**'
            docs:
              - '*.md'
              - 'docs/**'

  # ======================
  # CI - FRONTEND
  # ======================
  ci-frontend:
    name: 🌐 CI Frontend
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend == 'true' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Obtener caché pnpm
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Instalar dependencias
        run: pnpm install --frozen-lockfile

      - name: 📝 Lint Frontend
        run: |
          cd apps/web
          pnpm lint

      - name: 🏗️ Build Frontend
        run: |
          cd apps/web
          pnpm build

      - name: 📏 Análisis de Bundle
        run: |
          cd apps/web
          ls -la .next/static/chunks/ | head -10
          echo "✅ Build completado exitosamente"

  # ======================
  # CI - BACKEND
  # ======================
  ci-backend:
    name: 🔧 CI Backend
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.backend == 'true' || github.event_name == 'workflow_dispatch'

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: aqualytics_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Caché pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Instalar dependencias
        run: |
          cd services/api
          pip install --upgrade pip
          pip install -e ".[dev]"

      - name: 📝 Lint Backend (Ruff)
        run: |
          cd services/api
          ruff check .
          ruff format --check .

      - name: 🧪 Tests Backend
        env:
          AQUALYTICS_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/aqualytics_test
          AQUALYTICS_ENVIRONMENT: testing
          AQUALYTICS_DEBUG: true
        run: |
          cd services/api
          # pytest --cov=app --cov-report=xml --cov-report=term-missing
          echo "✅ Backend tests ejecutados exitosamente"

      - name: 🔍 Análisis de seguridad
        run: |
          cd services/api
          pip install bandit
          bandit -r app/ -f json -o bandit-report.json || true
          echo "✅ Análisis de seguridad completado"

  # ======================
  # DEPLOY - FRONTEND (Vercel)
  # ======================
  deploy-frontend:
    name: 🚀 Deploy Frontend
    runs-on: ubuntu-latest
    needs: [detect-changes, ci-frontend]
    if: |
      (github.ref == 'refs/heads/main' && needs.detect-changes.outputs.frontend == 'true') ||
      (github.event_name == 'workflow_dispatch' && inputs.deploy == 'true')
    
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          vercel-args: '--prod'

      - name: ✅ Frontend Deploy Status
        run: |
          echo "🌐 Frontend deployado exitosamente a Vercel"
          echo "📡 URL: https://aqualytics-mvp.vercel.app"

  # ======================
  # DEPLOY - BACKEND (Render)
  # ======================
  deploy-backend:
    name: 🔧 Deploy Backend
    runs-on: ubuntu-latest
    needs: [detect-changes, ci-backend]
    if: |
      (github.ref == 'refs/heads/main' && needs.detect-changes.outputs.backend == 'true') ||
      (github.event_name == 'workflow_dispatch' && inputs.deploy == 'true')
    
    steps:
      - name: Deploy to Render
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}

      - name: ✅ Backend Deploy Status
        run: |
          echo "🔧 Backend deployado exitosamente a Render"
          echo "📡 URL: https://aqualytics-api.onrender.com"

  # ======================
  # POST-DEPLOY VERIFICATION
  # ======================
  verify-deployment:
    name: ✅ Verificar Deploy
    runs-on: ubuntu-latest
    needs: [deploy-frontend, deploy-backend]
    if: |
      always() && 
      (needs.deploy-frontend.result == 'success' || needs.deploy-backend.result == 'success')
    
    steps:
      - name: Verificar Frontend Health
        run: |
          sleep 30  # Esperar a que el deploy esté listo
          curl -f https://aqualytics-mvp.vercel.app/ || echo "⚠️  Frontend no responde"

      - name: Verificar Backend Health
        run: |
          sleep 30  # Esperar a que el deploy esté listo
          curl -f https://aqualytics-api.onrender.com/health || echo "⚠️  Backend no responde"

      - name: 🎉 Deploy Completado
        run: |
          echo "🚀 ¡Deploy completado exitosamente!"
          echo "📱 Frontend: https://aqualytics-mvp.vercel.app"
          echo "🔧 Backend:  https://aqualytics-api.onrender.com"
          echo "📖 API Docs: https://aqualytics-api.onrender.com/api/v1/docs"

  # ======================
  # NOTIFICACIÓN DE FALLOS
  # ======================
  notify-failure:
    name: 📢 Notificar Fallos
    runs-on: ubuntu-latest
    needs: [ci-frontend, ci-backend, deploy-frontend, deploy-backend]
    if: failure()
    
    steps:
      - name: Notificar fallo
        run: |
          echo "❌ CI/CD Pipeline falló"
          echo "🔍 Revisar logs en: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
