# =======================================================================
# AquaLytics MVP - Pull Request Checks
# =======================================================================
# 
# Workflow ligero para Pull Requests que ejecuta solo CI checks
# sin deployment. Optimizado para feedback rápido.
#

name: 🔍 PR Checks

on:
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened]

env:
  NODE_VERSION: '20.x'
  PYTHON_VERSION: '3.11'
  PNPM_VERSION: '8.x'

jobs:
  # ======================
  # DETECTAR CAMBIOS
  # ======================
  detect-changes:
    name: 🔍 Detectar Cambios
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.changes.outputs.frontend }}
      backend: ${{ steps.changes.outputs.backend }}
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Detectar cambios
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            frontend:
              - 'apps/web/**'
              - 'package.json'
              - 'pnpm-*.yaml'
            backend:
              - 'services/api/**'

  # ======================
  # QUICK CHECKS
  # ======================
  quick-frontend-check:
    name: ⚡ Quick Frontend Check
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend == 'true'
    
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Instalar dependencias
        run: pnpm install --frozen-lockfile

      - name: 📝 Lint check
        run: |
          cd apps/web
          pnpm lint

      - name: 🏗️ Build check
        run: |
          cd apps/web
          pnpm build

      - name: ✅ Frontend OK
        run: echo "✅ Frontend checks passed"

  quick-backend-check:
    name: ⚡ Quick Backend Check
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.backend == 'true'
    
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Instalar dependencias
        run: |
          cd services/api
          pip install --upgrade pip
          pip install -e ".[dev]"

      - name: 📝 Lint check
        run: |
          cd services/api
          ruff check .
          ruff format --check .

      - name: ✅ Backend OK
        run: echo "✅ Backend checks passed"

  # ======================
  # RESUMEN DE PR
  # ======================
  pr-summary:
    name: 📋 PR Summary
    runs-on: ubuntu-latest
    needs: [detect-changes, quick-frontend-check, quick-backend-check]
    if: always()
    
    steps:
      - name: PR Check Summary
        run: |
          echo "## 🔍 Pull Request Check Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.detect-changes.outputs.frontend }}" == "true" ]]; then
            if [[ "${{ needs.quick-frontend-check.result }}" == "success" ]]; then
              echo "✅ **Frontend**: All checks passed" >> $GITHUB_STEP_SUMMARY
            else
              echo "❌ **Frontend**: Checks failed" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "⏭️ **Frontend**: No changes detected" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.detect-changes.outputs.backend }}" == "true" ]]; then
            if [[ "${{ needs.quick-backend-check.result }}" == "success" ]]; then
              echo "✅ **Backend**: All checks passed" >> $GITHUB_STEP_SUMMARY
            else
              echo "❌ **Backend**: Checks failed" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "⏭️ **Backend**: No changes detected" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🚀 **Ready for merge**: $(if [[ "${{ needs.quick-frontend-check.result }}" != "failure" && "${{ needs.quick-backend-check.result }}" != "failure" ]]; then echo "Yes"; else echo "No - fix issues above"; fi)" >> $GITHUB_STEP_SUMMARY
