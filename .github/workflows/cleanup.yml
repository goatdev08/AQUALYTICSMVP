# =======================================================================
# AquaLytics MVP - Repository Cleanup
# =======================================================================
# 
# Workflow para limpiar artifacts antiguos y mantener el repo organizado.
# Se ejecuta semanalmente para evitar que se llene el storage de GitHub.
#

name: üßπ Cleanup

on:
  schedule:
    # Ejecutar los domingos a las 3:00 AM UTC
    - cron: '0 3 * * 0'
  workflow_dispatch:

jobs:
  # ======================
  # CLEANUP ARTIFACTS
  # ======================
  cleanup-artifacts:
    name: üóëÔ∏è Cleanup Artifacts
    runs-on: ubuntu-latest
    
    steps:
      - name: Cleanup old artifacts
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            
            // Obtener artifacts m√°s antiguos que 30 d√≠as
            const cutoffDate = new Date();
            cutoffDate.setDate(cutoffDate.getDate() - 30);
            
            const artifacts = await github.rest.actions.listArtifactsForRepo({
              owner,
              repo,
              per_page: 100
            });
            
            let deletedCount = 0;
            
            for (const artifact of artifacts.data.artifacts) {
              const createdAt = new Date(artifact.created_at);
              
              if (createdAt < cutoffDate) {
                try {
                  await github.rest.actions.deleteArtifact({
                    owner,
                    repo,
                    artifact_id: artifact.id
                  });
                  
                  console.log(`üóëÔ∏è Deleted artifact: ${artifact.name} (${artifact.created_at})`);
                  deletedCount++;
                } catch (error) {
                  console.log(`‚ùå Failed to delete artifact ${artifact.name}: ${error.message}`);
                }
              }
            }
            
            console.log(`‚úÖ Cleanup completed. Deleted ${deletedCount} artifacts.`);
            
            // Crear summary
            const summary = `## üßπ Artifact Cleanup Summary\n\n` +
                           `- **Total artifacts processed**: ${artifacts.data.artifacts.length}\n` +
                           `- **Artifacts deleted**: ${deletedCount}\n` +
                           `- **Cutoff date**: ${cutoffDate.toISOString().split('T')[0]}\n\n` +
                           `Artifacts older than 30 days have been automatically removed to free up storage space.`;
                           
            await core.summary.addRaw(summary).write();

  # ======================
  # CLEANUP WORKFLOW RUNS
  # ======================
  cleanup-workflow-runs:
    name: üîÑ Cleanup Workflow Runs
    runs-on: ubuntu-latest
    
    steps:
      - name: Cleanup old workflow runs
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            
            // Obtener workflow runs m√°s antiguos que 90 d√≠as
            const cutoffDate = new Date();
            cutoffDate.setDate(cutoffDate.getDate() - 90);
            
            const workflowRuns = await github.rest.actions.listWorkflowRunsForRepo({
              owner,
              repo,
              per_page: 100
            });
            
            let deletedCount = 0;
            
            for (const run of workflowRuns.data.workflow_runs) {
              const createdAt = new Date(run.created_at);
              
              // Solo borrar runs completed m√°s antiguos que 90 d√≠as
              if (createdAt < cutoffDate && run.status === 'completed') {
                try {
                  await github.rest.actions.deleteWorkflowRun({
                    owner,
                    repo,
                    run_id: run.id
                  });
                  
                  console.log(`üîÑ Deleted workflow run: ${run.name} (${run.created_at})`);
                  deletedCount++;
                } catch (error) {
                  console.log(`‚ùå Failed to delete workflow run ${run.id}: ${error.message}`);
                }
              }
            }
            
            console.log(`‚úÖ Workflow cleanup completed. Deleted ${deletedCount} runs.`);

  # ======================
  # CLEANUP SUMMARY
  # ======================
  cleanup-summary:
    name: üìä Cleanup Summary
    runs-on: ubuntu-latest
    needs: [cleanup-artifacts, cleanup-workflow-runs]
    if: always()
    
    steps:
      - name: Repository cleanup summary
        run: |
          echo "## üßπ Repository Cleanup Completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Cleanup Actions Performed:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.cleanup-artifacts.result }}" == "success" ]]; then
            echo "‚úÖ **Artifacts**: Old artifacts (>30 days) cleaned up successfully" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ö†Ô∏è **Artifacts**: Cleanup had issues - check logs" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.cleanup-workflow-runs.result }}" == "success" ]]; then
            echo "‚úÖ **Workflow Runs**: Old completed runs (>90 days) cleaned up" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ö†Ô∏è **Workflow Runs**: Cleanup had issues - check logs" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Benefits:" >> $GITHUB_STEP_SUMMARY
          echo "- üíæ **Storage**: Freed up GitHub Actions storage space" >> $GITHUB_STEP_SUMMARY
          echo "- üöÄ **Performance**: Improved repository performance" >> $GITHUB_STEP_SUMMARY
          echo "- üìä **Clarity**: Removed old data for better visibility" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Next cleanup**: This workflow runs automatically every Sunday at 3:00 AM UTC"
